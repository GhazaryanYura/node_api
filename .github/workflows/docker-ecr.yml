name: Docker Image CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Replace with your AWS region (e.g., us-west-1, us-east-1, etc.)

      # Step 4: Log in to AWS ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Step 5: Build Docker image and tag it as 'latest'
      - name: Build Docker image and tag as 'latest'
        run: |
          docker build -t ${{ secrets.AWS_ECR_REPO }}:latest .

      # Step 6: Push Docker image to Amazon ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ECR_REPO }}:latest

      # Step 7: Fetch current ECS Task Definition, update it with the new image
      - name: Update ECS Task Definition
        run: |
          # Fetch the current task definition and create a new task definition with the updated image
          CURRENT_TASK_DEF=$(aws ecs describe-task-definition --task-definition api)
          
          # Extract the container definition from the current task definition
          CONTAINER_DEF=$(echo $CURRENT_TASK_DEF | jq '.taskDefinition.containerDefinitions[0]')
          
          # Update the image in the container definition
          UPDATED_CONTAINER_DEF=$(echo $CONTAINER_DEF | jq '.image = "${{ secrets.AWS_ECR_REPO }}:latest"')

      # Step 8: Update ECS Service to use the new task definition
      - name: Update ECS Service
        run: |
          # Update ECS service to use the new task definition
          aws ecs update-service \
            --cluster api \
            --service api \
            --force-new-deployment \
            --task-definition api
