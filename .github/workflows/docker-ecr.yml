name: Docker Image CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Replace with your AWS region (e.g., us-west-1, us-east-1, etc.)

      # Step 4: Log in to AWS ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Step 5: Build Docker image and tag it as 'latest'
      - name: Build Docker image and tag as 'latest'
        run: |
          docker build -t ${{ secrets.AWS_ECR_REPO }}:latest .

      # Step 6: Push Docker image to Amazon ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ECR_REPO }}:latest
      # Step 7: Register a new revision of the Task Definition
      - name: Register ECS Task Definition
        run: |
          # Replace with your task definition name
          TASK_DEFINITION_NAME="api"
          ECR_IMAGE_URI="${{ secrets.AWS_ECR_REPO }}:latest"

          # Fetch current task definition to get the previous configurations
          TASK_DEFINITION_JSON=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION_NAME)

    # Modify the task definition to update the image in container definitions
          UPDATED_TASK_DEFINITION=$(echo $TASK_DEFINITION_JSON | jq \
            '.taskDefinition.containerDefinitions[0].image = "'$ECR_IMAGE_URI'"')

    # Save the updated task definition as a temporary file
          echo $UPDATED_TASK_DEFINITION > updated_task_definition.json

    # Register the new task definition revision using the updated file
          aws ecs register-task-definition --cli-input-json file://updated_task_definition.json

      # Step 8: Update ECS Service with the new Task Definition
      - name: Update ECS Service to use the new Task Definition
        run: |
          # Replace with your ECS cluster and service names
          CLUSTER_NAME="api"
          SERVICE_NAME="api"

          # Update ECS service to use the newly registered task definition
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --task-definition $TASK_DEFINITION_NAME --force-new-deployment
